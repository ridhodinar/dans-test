// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "dans",
    "version": "1.0.0"
  },
  "host": "dans.com",
  "basePath": "/v1",
  "paths": {
    "/job": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get All job",
        "tags": [
          "job"
        ],
        "operationId": "GetAllJobs",
        "parameters": [
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "name": "location",
            "in": "query"
          },
          {
            "type": "string",
            "name": "full_time",
            "in": "query"
          },
          {
            "type": "string",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "All Jobs",
            "schema": {
              "$ref": "#/definitions/JobList"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Jobs Not Found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/job/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get job details",
        "tags": [
          "job"
        ],
        "operationId": "GetJobDetail",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Detail",
            "schema": {
              "$ref": "#/definitions/JobDetail"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Jobs Not Found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Returns token for authorized User",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "operationId": "Login",
        "parameters": [
          {
            "description": "Login Payload",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/LoginSuccess"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "JobDetail": {
      "type": "object",
      "properties": {
        "company": {
          "type": "string"
        },
        "company_logo": {
          "type": "string"
        },
        "company_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "how_to_apply": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "JobList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/JobDetail"
      }
    },
    "LoginInfo": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "LoginSuccess": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "dans",
    "version": "1.0.0"
  },
  "host": "dans.com",
  "basePath": "/v1",
  "paths": {
    "/job": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get All job",
        "tags": [
          "job"
        ],
        "operationId": "GetAllJobs",
        "parameters": [
          {
            "type": "string",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "name": "location",
            "in": "query"
          },
          {
            "type": "string",
            "name": "full_time",
            "in": "query"
          },
          {
            "type": "string",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "All Jobs",
            "schema": {
              "$ref": "#/definitions/JobList"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Jobs Not Found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/job/{id}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Get job details",
        "tags": [
          "job"
        ],
        "operationId": "GetJobDetail",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Job Detail",
            "schema": {
              "$ref": "#/definitions/JobDetail"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Jobs Not Found"
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Returns token for authorized User",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "operationId": "Login",
        "parameters": [
          {
            "description": "Login Payload",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/LoginSuccess"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "User not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "JobDetail": {
      "type": "object",
      "properties": {
        "company": {
          "type": "string"
        },
        "company_logo": {
          "type": "string"
        },
        "company_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "how_to_apply": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "JobList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/JobDetail"
      }
    },
    "LoginInfo": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "LoginSuccess": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
